{
  "swagger": "2.0",
  "info": {
    "description": "This is a REST Api representing classic Minesweeper game.",
    "version": "1.0.0",
    "title": "minesweeper-API",
    "contact": {
      "email": "cristian.maurin@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "tags": [
    {
      "name": "Board",
      "description": "Everything about Boards and how to play with them"
    },
    {
      "name": "User",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register new user on the system",
        "description": "Register new user on the system with a valid email and password",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Post Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created succesfuly"
          }
        }
      }
    },
    "/auth": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Retrieve auth token",
        "description": "Retrieve then token needed to operate over the boards",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Post Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok"
          },
          "401": {
            "description": "UNAUTHORIZED"
          }
        }
      }
    },
    "/boards": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get all boards",
        "description": "Retrieve all current user boards",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jwt",
            "in": "header",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Board"
              }
            }
          }
        }
      }
    },
    "/boards/{board_id}": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get especific board",
        "description": "Retrieve board for provided ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "Id of wanted board",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jwt",
            "in": "header",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          },
          "400": {
            "description": "The board does not exist or you don't have enough privileges to see it."
          }
        }
      }
    },
    "/boards/{board_id}/status": {
      "get": {
        "tags": [
          "Board"
        ],
        "summary": "Get especific board",
        "description": "Retrieve board for provided ID",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "Id of wanted board",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jwt",
            "in": "header",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "Id of wanted board",
            "required": true,
            "type": "string",
            "enum": [
              "pause",
              "release"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          },
          "400": {
            "description": "The board does not exist or you don't have enough privileges to see it."
          }
        }
      }
    },
    "/play/{board_id}": {
      "post": {
        "tags": [
          "Board"
        ],
        "summary": "Play the game",
        "description": "Apply an accion over a Cell  of the board. Can be X in order to discover the cell, F or ? to flag it.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "board_id",
            "in": "path",
            "description": "Id of wanted board",
            "required": true,
            "type": "integer"
          },
          {
            "name": "jwt",
            "in": "header",
            "description": "Authorization token",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Row, column and action to make",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PlayAction"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Board"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "PlayAction": {
      "type": "object",
      "properties": {
        "operation": {
          "type": "string",
          "enum": [
            "X",
            "F",
            "?"
          ]
        },
        "row": {
          "type": "integer",
          "format": "int64"
        },
        "column": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Board": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "rows": {
          "type": "integer",
          "format": "int64"
        },
        "columns": {
          "type": "integer",
          "format": "int64"
        },
        "mines": {
          "type": "integer",
          "format": "int64"
        },
        "time_elapsed": {
          "type": "integer"
        },
        "status": {
          "type": "string",
          "enum": [
            "paused",
            "playing",
            "Game Over",
            "You win"
          ]
        },
        "creation_date": {
          "type": "string"
        },
        "current_game_status": {
          "type": "string"
        }
      }
    }
  }
}
